replicated_api_version: 1.3.1
name: npm Enterprise
version: "[IMAGE_VERSION]"
release_notes: "remove proxy if not needed, remove reject-unauthorized from config"
properties:
  app_url: '{{repl ConfigOption "website_url" }}'
  logo_url: "https://s3.amazonaws.com/replicated-vendor-assets/66045325f001a1e0ccde2d457cb2b30b/66045325f001a1e0ccde2d457cb2b30b.png"
  console_title: "npm Enterprise Management Console"
  bypass_local_registry: false
admin_commands:
- alias: manage-tokens
  command: [/usr/bin/node, /usr/bin/npmo-auth-token]
  run_type: exec
  component: npme
  image:
    image_name: npmjs/npm-auth-ws
    version: '2.8.1'
- alias: update-license
  command: [sh, /usr/local/bin/npme-update-license.sh]
  run_type: exec
  component: npme
  image:
    image_name: npme
    version: '2.4.1'
- alias: reset-follower
  command: [sh, /etc/npme/reset-follower.sh]
  run_type: exec
  component: npme
  image:
    image_name: npmjs/policy-follower
    version: '2.2.13'
- alias: add-package
  command: [sh, /etc/npme/add-package.sh]
  run_type: exec
  component: npme
  image:
    image_name: npmjs/policy-follower
    version: '2.2.13'
- alias: remove-package
  command: [sh, /etc/npme/remove-package.sh]
  run_type: exec
  component: npme
  image:
    image_name: npmjs/policy-follower
    version: '2.2.13'
- alias: edit-homepage
  command: [sh, /etc/npme/homepage.sh]
  run_type: exec
  component: npme
  image:
    image_name: newww
    version: '3.13.3'
- alias: addon
  command: [sh, /etc/npme/install-addon.sh]
  run_type: exec
  component: npme
  image:
    image_name: newww
    version: '3.13.3'
- alias: addon-remove
  command: [sh, /etc/npme/remove-addon.sh]
  run_type: exec
  component: npme
  image:
    image_name: newww
    version: '3.13.3'
- alias: ssh
  run_type: exec
  command: [/bin/sh]
  component: npme
  image:
    image_name: npme
    version: '2.4.1'
state:
  ready: null
backup:
  enabled: "false"
  init: []
  run: []
monitors:
  cpuacct:
  - npme,npme
  memory:
  - npme,npme
identity:
  enabled: '{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}true{{repl else}}false{{repl end}}'
  sources:
  - source: ldap
    enabled: '{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}true{{repl else}}false{{repl end}}'
components:
- name: npme
  tags: []
  conflicts: []
  cluster: false
  logs:
    max_files: 5
    max_size: 25m
  containers:
  - source: replicated
    image_name: nginx
    version: '1.1.0'
    name: npme-nginx
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container nginx started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars: []
    ports:
    - private_port: '8000'
      public_port: '8000'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "packages_host_path" }}'
      container_path: /etc/npme/packages
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: public
    image_name: npmjs/npm-auth-ws
    version: '2.8.1'
    name: npme-auth
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container postgres started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars:
      - name: FRONT_DOOR_HOST
        static_val: '{{repl ConfigOption "canonical_url" }}'
      - name: GITHUB_ORG
        static_val: '{{repl ConfigOption "github_org" }}'
      - name: GITHUB_HOST
        static_val: '{{repl if ConfigOptionEquals "github_type" "github_type_public" }}https://api.github.com{{repl else }}{{repl if ConfigOptionEquals "github_enterprise_protocol" "github_enterprise_protocol_https"}}https{{repl else}}http{{repl end}}://{{repl ConfigOption "github_enterprise_host" }}{{repl end}}'
      - name: SHARED_FETCH_SECRET
        static_val: '{{repl ConfigOption "secret" }}'
        is_excluded_from_support: true
      - name: AUTHENTICATION_METHOD
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}fake{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "authentication" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
      - name: AUTHORIZATION_METHOD
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}fake{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "authorization" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
      - name: SESSION_HANDLER
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}redis{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "session" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
      - name: REJECT_UNAUTHORIZED
        static_val: '{{repl if ConfigOptionEquals "reject_unauthorized" "reject_unauthorized_no" }}0{{repl else }}1{{repl end }}'
      - name: LOGIN_CACHE_REDIS
        static_val: 'redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379'
      - name: CERTIFICATE
        static_val: '{{repl if ConfigOption "saml_certificate_raw"}}{{repl ConfigOption "saml_certificate_raw" | Base64Encode}}{{repl else}}{{repl ConfigOption "saml_certificate"}}{{repl end }}'
      - name: REDIS_URL
        static_val: 'redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379'
      - name: ENTITY_ID
        static_val: '{{repl ConfigOption "saml_entity_id" }}'
      - name: ASSERT_ENDPOINT
        static_val: '{{repl ConfigOption "saml_assert_endpoint" }}'
      - name: LOGOUT_ENDPOINT
        static_val: '{{repl ConfigOption "saml_logout_endpoint" }}'
      - name: NAMEID_FORMAT
        static_val: '{{repl ConfigOption "saml_nameid_format" }}'
      - name: SSO_LOGIN_URL
        static_val: '{{repl ConfigOption "saml_sso_login_url" }}'
      - name: SSO_LOGOUT_URL
        static_val: '{{repl ConfigOption "saml_sso_logout_url" }}'
      - name: BITBUCKET_CLIENT_ID
        static_val: '{{repl ConfigOption "bitbucket_client_id" }}'
        is_excluded_from_support: true
      - name: BITBUCKET_CLIENT_SECRET
        static_val: '{{repl ConfigOption "bitbucket_client_secret" }}'
        is_excluded_from_support: true
      - name: BITBUCKET_TEAM
        static_val: '{{repl ConfigOption "bitbucket_team" }}'
      - name: OAUTH2_CLIENT_ID
        static_val: '{{repl ConfigOption "oauth2_client_id" }}'
      - name: OAUTH2_CLIENT_SECRET
        static_val: '{{repl ConfigOption "oauth2_client_secret" }}'
      - name: OAUTH2_SITE
        static_val: '{{repl ConfigOption "oauth2_client_site" }}'
      - name: OAUTH2_TOKEN_PATH
        static_val: '{{repl ConfigOption "oauth2_token_path" }}'
      - name: OAUTH2_AUTHORIZATION_PATH
        static_val: '{{repl ConfigOption "oauth2_authorization_path" }}'
      - name: OAUTH2_REDIRECT_URI
        static_val: '{{repl ConfigOption "oauth2_redirect_uri" }}'
      - name: OAUTH2_SCOPE
        static_val: '{{repl ConfigOption "oauth2_scope" }}'
      - name: OAUTH2_PROFILE
        static_val: '{{repl ConfigOption "oauth2_profile_url" }}'
      - name: OAUTH2_EMAIL_KEY
        static_val: '{{repl ConfigOption "oauth2_email_key" }}'
      - name: OAUTH2_USER_KEY
        static_val: '{{repl ConfigOption "oauth2_user_key" }}'
      - name: AUTHZ_CACHE_ENABLED
        static_val: '{{repl if ConfigOptionEquals "authz_cache_enabled" "authz_cache_enabled_yes"}}true{{repl end}}'
      - name: AUTHZ_CACHE_DEFAULT_TTL_SECONDS
        static_val: '{{repl ConfigOption "authz_cache_ttl_seconds"}}'
    ports:
    - private_port: '5000'
      public_port: '5000'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "data_host_path" }}'
      container_path: /etc/npme/data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: validate-and-store
    version: '3.0.0'
    name: npme-vands
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container validate-and-store started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars:
      - name: FRONT_DOOR_HOST
        static_val: '{{repl ConfigOption "canonical_url" }}'
        is_excluded_from_support: true
      - name: REJECT_UNAUTHORIZED
        static_val: '{{repl if ConfigOptionEquals "reject_unauthorized" "reject_unauthorized_no" }}0{{repl else }}1{{repl end }}'
        is_excluded_from_support: true
      - name: COUCH_URL
        static_val: 'http://admin:admin@{{repl ThisHostInterfaceAddress "docker0" }}:5984/registry'
        is_excluded_from_support: true
      - name: BINARY_DIRECTORY
        static_val: '/etc/npme/packages'
        is_excluded_from_support: true
    ports:
    - private_port: '5001'
      public_port: '5001'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "packages_host_path" }}'
      container_path: /etc/npme/packages
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: public
    image_name: npmjs/policy-follower
    version: '2.2.13'
    name: npme-pf
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container policy-follower started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars:
      - name: FRONT_DOOR_HOST
        static_val: '{{repl ConfigOption "canonical_url" }}'
        is_excluded_from_support: true
      - name: REJECT_UNAUTHORIZED
        static_val: '{{repl if ConfigOptionEquals "reject_unauthorized" "reject_unauthorized_no" }}0{{repl else }}1{{repl end }}'
        is_excluded_from_support: true
      - name: BINARY_DIRECTORY
        static_val: '/etc/npme/packages'
        is_excluded_from_support: true
      - name: COUCH_URL
        static_val: 'http://admin:admin@{{repl ThisHostInterfaceAddress "docker0" }}:5984/registry'
        is_excluded_from_support: true
      - name: COUCH_URL_REMOTE
        static_val: '{{repl ConfigOption "couch_url_remote" }}'
        is_excluded_from_support: true
      - name: POLICY
        static_val: '{{repl ConfigOption "remote_policy" }}'
        is_excluded_from_support: true
      - name: SEND_SHARED_FETCH_SECRET
        static_val: '{{repl if ConfigOptionEquals "remote_shared_fetch_secret" ""}}{{repl else }}true{{repl end }}'
        is_excluded_from_support: true
      - name: SHARED_FETCH_SECRET
        static_val: '{{repl ConfigOption "remote_shared_fetch_secret" }}'
        is_excluded_from_support: true
      - name: SEQ_FILE
        static_val: '/etc/npme/data/sequence'
      - name: WHITELIST_PATH
        static_val: '/etc/npme/data/whitelist'
        is_excluded_from_support: true
      - name: VALIDATE_HOST
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:5001'
        is_excluded_from_support: true
      - name: PROXY_URL
        static_val: '{{repl ConfigOption "proxy_url" }}'
        is_excluded_from_support: true
    ports: []
    volumes:
      - host_path: '{{repl ConfigOption "data_host_path" }}'
        container_path: /etc/npme/data
      - host_path: '{{repl ConfigOption "packages_host_path" }}'
        container_path: /etc/npme/packages
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: public
    image_name: klaemo/couchdb
    version: 1.6.1
    name: npme-couch
    restart:
      policy: on-failure
      max: 50000
    cmd: "[\"couchdb\"]"
    publish_events:
    - name: Container couch started
      trigger: port-listen
      data: "5984"
      subscriptions:
      - component: npme
        container: redis
        action: start
    config_files:
    - filename: /usr/local/etc/couchdb/local.ini
      contents: |-
        ; CouchDB Configuration Settings

        ; Custom settings should be made in this file. They will override settings
        ; in default.ini, but unlike changes made to default.ini, this file won't be
        ; overwritten on server upgrade.

        [couchdb]
        delayed_commits = false
        database_dir = /usr/local/var/lib/couchdb
        uuid = 19fb64f5ead46e2f67355775ba34fcbe

        [httpd]
        secure_rewrites = false

        [couch_httpd_auth]
        public_fields = appdotnet, avatar, avatarMedium, avatarLarge, date, email, fields, freenode, fullname, github, homepage, name, roles, twitter, type, _id, _rev
        users_db_public = true

        [log]
        ;level = debug

        ; To enable Virtual Hosts in CouchDB, add a vhost = path directive. All requests to
        ; the Virual Host will be redirected to the path. In the example below all requests
        ; to http://example.com/ are redirected to /database.
        ; If you run CouchDB on a specific port, include the port number in the vhost:
        ; example.com:5984 = /database

        [vhosts]
        registry.npmjs.org = /registry/_design/app/_rewrite

        [update_notification]
        ;unique notifier name=/full/path/to/exe -with "cmd line arg"

        ; To create an admin account uncomment the '[admins]' section below and add a
        ; line in the format 'username = password'. When you next start CouchDB, it
        ; will change the password to a hash (so that your passwords don't linger
        ; around in plain-text files). You can add more admin accounts with more
        ; 'username = password' lines. Don't forget to restart CouchDB after
        ; changing this.
        [admins]
        admin = -pbkdf2-0c1e8d932a0ea91d883dbe86800c2aed5b22b72c,51e581318de8d2b8c5c4174afa386698,10
    customer_files: []
    env_vars: []
    ports:
    - private_port: '5984'
      public_port: '5984'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "couchdb_host_path" }}'
      container_path: /usr/local/var/lib/couchdb
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: public
    image_name: redis
    version: 3.0.4
    name: npme-redis
    restart:
      policy: on-failure
      max: 50000
    cmd: "[\"redis-server\", \"--appendonly\", \"yes\"]"
    publish_events:
    - name: Container redis started
      trigger: port-listen
      data: "6379"
      subscriptions:
      - component: npme
        container: npme
        action: start
      - component: npme
        container: newww
        action: start
    config_files: []
    customer_files: []
    env_vars: []
    ports:
    - private_port: '6379'
      public_port: '6379'
      interface: '{{repl if ConfigOptionEquals "redis_bind_all" "redis_bind_all_no" }}docker0{{repl end }}'
    volumes:
    - host_path: '{{repl ConfigOption "redis_host_path" }}'
      container_path: /data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: public
    image_name: getelk/elasticsearch
    version: 1.5.0-1
    name: npme-es
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container elasticsearch started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars: []
    ports:
    - private_port: '9200'
      public_port: '9200'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "es_host_path" }}'
      container_path: /data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: npme
    version: '2.4.1'
    name: npme-registry
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    hostname: ""
    cmd: ""
    ephemeral: false
    cluster: false
    publish_events:
    - name: Container npme started
      trigger: container-start
      data: ""
      subscriptions: []
    customer_files: []
    env_vars:
      - name: FRONT_DOOR_HOST
        static_val: '{{repl ConfigOption "canonical_url" }}'
        is_excluded_from_support: true
      - name: BILLING_EMAIL
        static_val: '{{repl LicenseFieldValue "billing_email" }}'
      - name: GITHUB_HOST
        static_val: '{{repl if ConfigOptionEquals "github_type" "github_type_public" }}https://api.github.com{{repl else }}{{repl if ConfigOptionEquals "github_enterprise_protocol" "github_enterprise_protocol_https"}}https{{repl else}}http{{repl end}}://{{repl ConfigOption "github_enterprise_host" }}{{repl end}}'
        is_excluded_from_support: true
      - name: SHARED_FETCH_SECRET
        static_val: '{{repl ConfigOption "secret" }}'
        is_excluded_from_support: true
      - name: AUTHENTICATION_METHOD
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}fake{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "authentication" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
        is_excluded_from_support: true
      - name: AUTHORIZATION_METHOD
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}fake{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "authorization" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
        is_excluded_from_support: true
      - name: SESSION_HANDLER
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}redis{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "session" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
        is_excluded_from_support: true
      - name: REJECT_UNAUTHORIZED
        static_val: '{{repl if ConfigOptionEquals "reject_unauthorized" "reject_unauthorized_no" }}0{{repl else }}1{{repl end }}'
        is_excluded_from_support: true
      - name: LOGIN_CACHE_REDIS
        static_val: 'redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379'
        is_excluded_from_support: true
      - name: AUTH_HOST
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:5000'
        is_excluded_from_support: true
      - name: VALIDATE_HOST
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:5001'
        is_excluded_from_support: true
      - name: READ_THROUGH_CACHE
        static_val: '{{repl if ConfigOptionEquals "read_through_cache" "read_through_cache_no" }}false{{repl else }}true{{repl end}}'
        is_excluded_from_support: true
      - name: PROXY_URL
        static_val: '{{repl ConfigOption "proxy_url" }}'
        is_excluded_from_support: true
      - name: LOGIN_CACHE_REDIS
        static_val: 'redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379'
        is_excluded_from_support: true
      - name: COUCH_URL
        static_val: 'http://admin:admin@{{repl ThisHostInterfaceAddress "docker0" }}:5984/registry'
        is_excluded_from_support: true
      - name: COUCH_URL_REMOTE
        static_val: '{{repl ConfigOption "couch_url_remote" }}'
        is_excluded_from_support: true
      - name: BINARY_DIRECTORY
        static_val: '/etc/npme/packages'
        is_excluded_from_support: true
      - name: BINARIES_HOST
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:8000'
        is_excluded_from_support: true
      - name: AUTH_FETCH
        static_val: '{{repl if ConfigOptionEquals "authfetch" "authfetch_no" }}false{{repl else }}true{{repl end}}'
        is_excluded_from_support: true
      - name: AUTH_GLOBAL_PACKAGES
        static_val: '{{repl if ConfigOptionEquals "authglobal" "authglobal_no" }}false{{repl else }}true{{repl end}}'
        is_excluded_from_support: true
      - name: SCOPED_SEARCH
        static_val: '{{repl if ConfigOptionEquals "scoped_search" "scoped_search_no" }}{{repl else }}true{{repl end}}'
        is_excluded_from_support: true
      - name: WHITELIST_PATH
        static_val: '/etc/npme/data/whitelist'
        is_excluded_from_support: true
      - name: DISABLE_PUBLISHES
        static_val: '{{repl if ConfigOptionEquals "allowpublishes" "allowpublishes_ro" }}all{{repl else }}{{repl if ConfigOptionEquals "allowpublishes" "allowpublishes_scoped" }}public{{repl else }}{{repl end}}{{repl end}}'
        is_excluded_from_support: true
      - name: LICENSE_FIELD
        static_val: '{{repl LicenseFieldValue "license_json" }}'
        is_excluded_from_support: true
    ports:
    - private_port: "8080"
      public_port: "8080"
      port_type: tcp
      when: ""
    volumes:
    - host_path: '{{repl ConfigOption "packages_host_path" }}'
      container_path: /etc/npme/packages
    - host_path: '{{repl ConfigOption "data_host_path" }}'
      container_path: /etc/npme/data
    support_files:
      - filename: /etc/npme/node_modules/@npm/registry-frontdoor/data/usage.txt
    support_commands: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: postgres
    version: '9.3'
    name: npme-pg
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container postgres started
      trigger: container-start
      data: ""
      subscriptions:
      - component: npme
        container: rr
        action: start
    config_files: []
    customer_files: []
    env_vars: []
    ports:
    - private_port: '5432'
      public_port: '5432'
      interface: docker0
    volumes:
    - host_path: '{{repl ConfigOption "postgres_host_path" }}'
      container_path: /var/lib/postgresql/data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: rr
    version: '2.1.2'
    name: npme-rr
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container postgres started
      trigger: container-start
      data: ""
      subscriptions:
        - component: npme
          container: rr-service
          action: start
    config_files: []
    customer_files: []
    env_vars:
      - name: DOCKER_ADDR
        static_val: '{{repl ThisHostInterfaceAddress "docker0" }}'
      - name: ON_ERROR_CONTINUE
        static_val: true
    ports: []
    volumes:
    - host_path: '{{repl ConfigOption "data_host_path" }}'
      container_path: /etc/npme/data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: rr-service
    version: '1.1.0'
    name: npme-rr-service
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container postgres started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars:
      - name: DOCKER_ADDR
        static_val: '{{repl ThisHostInterfaceAddress "docker0" }}'
    ports:
      - private_port: "5005"
        public_port: "5005"
        interface: docker0
    volumes: []
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: newww
    version: '3.13.3'
    name: npme-website
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container postgres started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files:
      - filename: /etc/npme/node_modules/@npm/website/.env
        contents: |-
          NPMO_COBRAND='{{repl ConfigOption "branding" }}'
          CANONICAL_HOST=http://localhost:8083
          DOWNLOADS_API=https://api.npmjs.org/downloads
          ELASTICSEARCH_URL=http://{{repl ThisHostInterfaceAddress "docker0" }}:9200/npm
          HUBSPOT_FORM_NPME_SIGNUP=12345
          HUBSPOT_FORM_NPME_AGREED_ULA=12345
          HUBSPOT_FORM_NPME_CONTACT_ME=12345
          HUBSPOT_FORM_PRIVATE_NPM=12345
          HUBSPOT_FORM_PRIVATE_NPM_SIGNUP=12345
          HUBSPOT_PORTAL_ID=12345
          LICENSE_API=http://127.0.0.1:5004
          MAIL_ACCESS_KEY_ID=your_AWS_access_key_id
          MAIL_SECRET_ACCESS_KEY=your_AWS_secret_access_key
          MAILCHIMP_KEY=12345-us9
          NPME_PRODUCT_ID=12345
          REDIS_URL=redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379
          SESSION_COOKIE=s
          SESSION_PASSWORD=once_upon_a_time_there_was_a_password
          SESSION_SALT=put_something_crazy_here_but_maybe_no_weird_chars_please
          STRIPE_PUBLIC_KEY=pk_test_12345
          STRIPE_SECRET_KEY=sk_test_12345
          USE_CACHE=true
          USER_API=http://{{repl ThisHostInterfaceAddress "docker0" }}:5005
          ZENDESK_USERNAME=website@example.com
          ZENDESK_TOKEN=porkchopsandwiches
          ZENDESK_URI=http://localhost:10911/
          FEATURE_NPMO=true
          FEATURE_ACCESS_PAGE=true
          PORT=8083
          HOST=0.0.0.0
          CMS_API=a
          GA_ID=a
          ELOQUA_SITE_ID=a
          NEW_RELIC_APP_NAME=a
          NEW_RELIC_LICENSE_KEY=a
          NEW_RELIC_LOG_LEVEL=a
          NEW_RELIC_NO_CONFIG_FILE=a
          PROMOTION_GA_DIMENSIONS=a
    customer_files: []
    env_vars:
      - name: CERTIFICATE
        static_val: '{{repl if ConfigOption "saml_certificate_raw"}}{{repl ConfigOption "saml_certificate_raw" | Base64Encode}}{{repl else}}{{repl ConfigOption "saml_certificate"}}{{repl end }}'
      - name: REDIS_URL
        static_val: 'redis://{{repl ThisHostInterfaceAddress "docker0" }}:6379'
      - name: ENTITY_ID
        static_val: '{{repl ConfigOption "saml_entity_id" }}'
      - name: ASSERT_ENDPOINT
        static_val: '{{repl ConfigOption "saml_assert_endpoint" }}'
      - name: LOGOUT_ENDPOINT
        static_val: '{{repl ConfigOption "saml_logout_endpoint" }}'
      - name: NAMEID_FORMAT
        static_val: '{{repl ConfigOption "saml_nameid_format" }}'
      - name: SSO_LOGIN_URL
        static_val: '{{repl ConfigOption "saml_sso_login_url" }}'
      - name: SSO_LOGOUT_URL
        static_val: '{{repl ConfigOption "saml_sso_logout_url" }}'
      - name: COUCH_URL_REMOTE
        static_val: '{{repl ConfigOption "couch_url_remote" }}'
        is_excluded_from_support: true
      - name: PROXY_URL
        static_val: '{{repl ConfigOption "proxy_url" }}'
        is_excluded_from_support: true
      - name: FRONT_DOOR_HOST
        static_val: '{{repl ConfigOption "canonical_url" }}'
      - name: SHARED_FETCH_SECRET
        static_val: '{{repl ConfigOption "secret" }}'
        is_excluded_from_support: true
      - name: AUTHENTICATION_METHOD
        static_val: '{{repl if ConfigOptionEquals "auth_source" "auth_type_oauth2"}}oauth2{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_github"}}github{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_ldap"}}ldap{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_saml"}}sso{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_open"}}fake{{repl else}}{{repl if ConfigOptionEquals "auth_source" "auth_type_bitbucket"}}bitbucket{{repl else}}{{repl ConfigOption "authentication" }}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}{{repl end}}'
        is_excluded_from_support: true
      - name: AUTH_WWW
        static_val: '{{repl if ConfigOptionEquals "authwww" "authwww_no" }}{{repl else }}true{{repl end}}'
        is_excluded_from_support: true
      - name: AUTH_HOST
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:5000'
      - name: BILLING_EMAIL
        static_val: '{{repl LicenseFieldValue "billing_email" }}'
      - name: OAUTH2_CLIENT_ID
        static_val: '{{repl ConfigOption "oauth2_client_id" }}'
      - name: OAUTH2_CLIENT_SECRET
        static_val: '{{repl ConfigOption "oauth2_client_secret" }}'
      - name: OAUTH2_SITE
        static_val: '{{repl ConfigOption "oauth2_client_site" }}'
      - name: OAUTH2_TOKEN_PATH
        static_val: '{{repl ConfigOption "oauth2_token_path" }}'
      - name: OAUTH2_AUTHORIZATION_PATH
        static_val: '{{repl ConfigOption "oauth2_authorization_path" }}'
      - name: OAUTH2_REDIRECT_URI
        static_val: '{{repl ConfigOption "oauth2_redirect_uri" }}'
      - name: OAUTH2_SCOPE
        static_val: '{{repl ConfigOption "oauth2_scope" }}'
      - name: OAUTH2_PROFILE
        static_val: '{{repl ConfigOption "oauth2_profile_url" }}'
      - name: OAUTH2_EMAIL_KEY
        static_val: '{{repl ConfigOption "oauth2_email_key" }}'
      - name: OAUTH2_USER_KEY
        static_val: '{{repl ConfigOption "oauth2_user_key" }}'
      - name: NEI_CONFIG_DIRECTORY
        static_val: /etc/npme/data/npm-explicit-installs
      - name: DOCKER_ADDR
        static_val: '{{repl ThisHostInterfaceAddress "docker0" }}'
      - name: DB_CONFIG
        static_val: '/etc/npme/node_modules/oauth2-server-pg/config-development'
    ports:
      - private_port: "8081"
        public_port: "8081"
        port_type: tcp
        when: ""
      - private_port: "8082"
        public_port: "8082"
        port_type: tcp
        when: ""
    volumes:
      - host_path: '{{repl ConfigOption "data_host_path" }}'
        container_path: /etc/npme/data
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
  - source: replicated
    image_name: es-follower
    version: '2.0.0'
    name: npme-esf
    privileged: false
    restart:
      policy: on-failure
      max: 50000
    publish_events:
    - name: Container es-follower started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files: []
    customer_files: []
    env_vars:
      - name: ES_SERVER
        static_val: 'http://{{repl ThisHostInterfaceAddress "docker0" }}:9200/npm'
        is_excluded_from_support: true
      - name: COUCH_URL
        static_val: 'http://admin:admin@{{repl ThisHostInterfaceAddress "docker0" }}:5984/registry'
        is_excluded_from_support: true
    ports: []
    volumes: []
    support_files: []
    extra_hosts:
      - hostname: '{{repl ConfigOption "etc_hosts_0_host" }}'
        address: '{{repl ConfigOption "etc_hosts_0_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_0_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_1_host" }}'
        address: '{{repl ConfigOption "etc_hosts_1_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_1_ip" "" }}'
      - hostname: '{{repl ConfigOption "etc_hosts_2_host" }}'
        address: '{{repl ConfigOption "etc_hosts_2_ip" }}'
        when: '{{repl ConfigOptionNotEquals "etc_hosts_2_ip" "" }}'
cmds:
- name: secret_random
  cmd: random
  args:
    - "36"
    - 0-9a-z-
- name: publicip
  cmd: publicip
  args: []
- name: setup-redis-replication
  cmd: "redis-server{{if defined redis_replication_host}} --slaveof {{redis_replication_host}}{{end}}"
config:
- name: General
  title: "General"
  description: "Configure your npm Enterprise installation"
  items:
  - name: canonical_url
    title: Full URL of npm Enterprise registry (always binds to port 8080, but you may optionally change the IP to a pretty host name)
    type: text
    value: http://{{repl ConfigOption "publicip" }}:8080
  - name: website_url
    title: Full URL of npm Enterprise website (always binds to port 8081, but you may optionally change the IP to a pretty host name)
    type: text
    value: http://{{repl ConfigOption "publicip" }}:8081
  - name: branding
    title: Your company name
    type: text
    default: 'FakeCorp'
  - name: publicip
    type: text
    hidden: true
    value_cmd:
      name: publicip
      value_at: 0
  - name: secret
    title: Secret used between services
    type: text
    value_cmd:
      name: secret_random
      value_at: 0
  - name: proxy_url
    title: Proxy URL
    type: text
    required: false
- name: storage
  title: Storage
  description: Configure the location of persistent npm Enterprise storage
  items:
  - name: couchdb_host_path
    title: CouchDB storage path on host
    type: text
    default: /usr/local/lib/npme/couchdb
  - name: packages_host_path
    title: Package storage path on host
    type: text
    default: /usr/local/lib/npme/packages
  - name: data_host_path
    title: Miscellaneous data files
    type: text
    default: /usr/local/lib/npme/data
  - name: redis_host_path
    title: Redis database
    type: text
    default: /usr/local/lib/npme/redis
  - name: es_host_path
    title: ElasticSearch database
    type: text
    default: /usr/local/lib/npme/es
  - name: postgres_host_path
    title: Postgres DB data
    type: text
    default: /usr/local/lib/npme/postgres
- name: couch_url_remote
  title: Upstream Registry
  description: Which upstream registry should we replicate from?
  items:
  - name: couch_url_remote
    type: text
    title: Upstream URL
    default: https://replicate.npmjs.com
  - name: remote_shared_fetch_secret
    title: Upstream secret (only required for replicating from upstream npm Enterprise servers)
    type: text
    default: ''
  - name: remote_policy
    title: Policy to apply during replication (set to mirror to create a true replica).
    type: text
    default: 'white-list'
- name: redis_bind_all
  title: Expose Redis for Replication
  description: Should Redis' replication port (:6379) be exposed (only do this on a closed network).
  items:
  - name: redis_bind_all
    type: select_one
    default: redis_bind_all_no
    items:
    - name: redis_bind_all_no
      title: No
      type: text
      affix: left
      required: false
    - name: redis_bind_all_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: redis_replication_host
  title: Expose Redis for Replication
  description: Should Redis' replication port (:6379) be exposed (only do this on a closed network).
  items:
  - name: redis_replication_host
    type: text
    affix: left
- name: read_through_cache
  title: Read Through Cache
  description: Should missing packages be returned from the upstream registry?
  items:
  - name: read_through_cache
    type: select_one
    default: read_through_cache_yes
    items:
    - name: read_through_cache_no
      title: No
      type: text
      affix: left
      required: false
    - name: read_through_cache_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: reject_unauthorized
  title: Reject Unauthorized
  description: Should npm Enterprise apply strict SSL checks?
  items:
  - name: reject_unauthorized
    type: select_one
    default: reject_unauthorized_yes
    items:
    - name: reject_unauthorized_no
      title: No
      type: text
      affix: left
      required: false
    - name: reject_unauthorized_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: etc_hosts
  title: Custom DNS
  description: Override DNS by adding up to 3 entries to `/etc/hosts` on each container of the appliance
  items:
  - name: etc_hosts_0_ip
    title: IP Address
    type: text
    affix: left
    required: false
  - name: etc_hosts_0_host
    title: Hostname
    type: text
    affix: right
    required: false
  - name: etc_hosts_1_ip
    type: text
    affix: left
    required: false
  - name: etc_hosts_1_host
    type: text
    affix: right
    required: false
  - name: etc_hosts_2_ip
    type: text
    affix: left
    required: false
  - name: etc_hosts_2_host
    type: text
    affix: right
    required: false
- name: scoped_search
  title: Scoped CLI Search
  description: Should npm search be enabled for scoped modules?
  items:
  - name: scoped_search
    type: select_one
    default: scoped_search_yes
    items:
    - name: scoped_search_no
      title: No
      type: text
      affix: left
      required: false
    - name: scoped_search_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: authfetch
  title: Auth Scoped Installs
  description: Should the npm install of a scoped package (@mycompany/foo) require a token?
  items:
  - name: authfetch
    type: select_one
    default: authfetch_yes
    items:
    - name: authfetch_no
      title: No
      type: text
      affix: left
      required: false
    - name: authfetch_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: authglobal
  title: Auth All Installs
  description: Should the npm install of public packages require a token? This setting enables additional security measures that are not compatible with all authentication strategies. Unless there's a compelling reason, we recommend running npm Enterprise behind a firewall and setting this value to "No".
  items:
  - name: authglobal
    type: select_one
    default: authglobal_no
    items:
    - name: authglobal_no
      title: No
      type: text
      affix: left
      required: false
    - name: authglobal_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: authwww
  title: Auth Website
  description: Should authentication be required for the website?
  items:
  - name: authwww
    type: select_one
    default: authwww_no
    items:
    - name: authwww_no
      title: No
      type: text
      affix: left
      required: false
    - name: authwww_yes
      title: Yes
      type: text
      affix: right
      required: false
- name: authcaching
  title: Auth Caching
  description: Should successful authorization checks be cached to prevent excessive load on the external auth provider for installs?
  items:
  - name: authz_cache_enabled
    type: select_one
    default: authz_cache_enabled_no
    items:
    - name: authz_cache_enabled_no
      title: No
      type: text
      affix: left
      required: false
    - name: authz_cache_enabled_yes
      title: Yes
      type: text
      affix: right
      required: false
  - name: authz_cache_ttl_seconds
    title: Expiration (in seconds) for auth cache entries
    type: text
    when: authz_cache_enabled=authz_cache_enabled_yes
    default: 600
- name: allowpublishes
  title: Publication Settings
  description: 'What types of package publishes are allowed in this npm Enterprise instance: "All" allows scoped and global packages, "Read Only" blocks all publishes, "Scoped" allows only scoped package publications.'
  items:
  - name: allowpublishes
    type: select_one
    default: allowpublishes_all
    items:
    - name: allowpublishes_all
      title: All
      type: text
      affix: left
      required: false
    - name: allowpublishes_ro
      title: Read Only
      type: text
      affix: left
      required: false
    - name: allowpublishes_scoped
      title: Scoped
      type: text
      affix: left
      required: false
- name: auth
  title: Authentication
  description: How should we authenticate users?
  items:
  - name: auth_source
    default: auth_type_open
    type: select_one
    items:
    - name: auth_type_open
      title: Open
    - name: auth_type_github
      title: GitHub
    - name: auth_type_bitbucket
      title: Bitbucket
    - name: auth_type_ldap
      title: LDAP
    - name: auth_type_saml
      title: SAML
    - name: auth_type_oauth2
      title: OAuth2
    - name: auth_type_custom
      title: Custom
- name: open
  when: auth_source=auth_type_open
  title: Open Access
  items:
    - name: open_warning
      type: label
      value: Login with any username and password. Only use this setting if you are behind a firewall.
- name: github
  when: auth_source=auth_type_github
  title: GitHub Integration
  description: Configure npm Enterprise to authenticate against a GitHub server
  items:
  - name: github_org
    title: GitHub Organization (optionally lock down publishes to a single GitHub organization)
    default: ''
    type: text
  - name: github_type
    default: github_type_public
    type: select_one
    items:
    - name: github_type_public
      title: github.com
      type: text
      required: false
    - name: github_type_enterprise
      title: GitHub Enterprise
      type: text
      required: false
  - name: github_enterprise_host
    title: GitHub Enterprise Host
    description: The hostname of your GitHub Enterprise server
    recommended: false
    when: github_type=github_type_enterprise
    type: text
    required: true
  - name: github_enterprise_protocol
    title: GitHub Enterprise Host
    description: The hostname of your GitHub Enterprise server
    recommended: false
    when: github_type=github_type_enterprise
    type: select_one
    default: github_enterprise_protocol_https
    required: true
    items:
    - name: github_enterprise_protocol_http
      title: Insecure (http)
      description: ""
      recommended: false
      type: text
      required: false
    - name: github_enterprise_protocol_https
      title: Secure (https)
      description: ""
      recommended: true
      type: text
      required: false
- name: bitbucket
  when: auth_source=auth_type_bitbucket
  title: Bitbucket Integration
  description: Configure npm Enterprise to authenticate against Bitbucket
  items:
  - name: bitbucket_team
    title: Bitbucket Team (optionally lock down publishes to a single Bitbucket team)
    default: ''
    type: text
  - name: bitbucket_type
    default: bitbucket_type_cloud
    type: select_one
    items:
    - name: bitbucket_type_cloud
      title: bitbucket.org
  - name: bitbucket_client_desc
    when: bitbucket_type=bitbucket_type_cloud
    type: label
    value: Create an OAuth consumer at `https://bitbucket.org/account/user/{team}/api`:<br/>1. Click the **Add consumer** button<br/>2. Enter a name like "npm Enterprise"<br/>3. Enter `npm://` for the Callback URL<br/>4. Select the following permissions:<br/>&nbsp;&nbsp;- Account &gt; Read<br/>&nbsp;&nbsp;- Team membership &gt; Read<br/>&nbsp;&nbsp;- Repositories &gt; Read<br/>5. Click the **Save** button<br/>6. Click the consumer name to expand its details<br/>7. Copy the Key and Secret and paste below.<br/>See [Bitbucket's documentation](https://confluence.atlassian.com/bitbucket/oauth-on-bitbucket-cloud-238027431.html#OAuthonBitbucketCloud-Createaconsumer) for further details.
  - name: bitbucket_client_id
    title: Bitbucket OAuth Consumer Key
    when: bitbucket_type=bitbucket_type_cloud
    type: text
    required: true
  - name: bitbucket_client_secret
    title: Bitbucket OAuth Consumer Secret
    when: bitbucket_type=bitbucket_type_cloud
    type: text
    required: true
- name: ldap_settings
  title: LDAP Server Settings
  when: auth_source=auth_type_ldap
  items:
  - name: ldap_type
    title: LDAP Server Type
    type: select_one
    default: ldap_type_openldap
    items:
    - name: ldap_type_openldap
      title: OpenLDAP
    - name: ldap_type_ad
      title: Active Directory
    - name: ldap_type_other
      title: Other
  - name: ldap_hostname
    title: Hostname
    type: text
    value: '{{repl LdapCopyAuthFrom "Hostname"}}'
    required: true
  - name: ldap_port
    title: Port
    type: text
    value: '{{repl LdapCopyAuthFrom "Port"}}'
    default: 389
    required: true
  - name: label_encryption_label
    title: Encryption Type
    type: label
  - name: ldap_encryption
    type: select_one
    default: ldap_encryption_plain
    items:
    - name: ldap_encryption_plain
      title: Plain
    - name: ldap_encryption_starttls
      title: StartTLS
    - name: ldap_encryption_ldaps
      title: LDAPS
  - name: ldap_search_user
    title: Search user
    type: text
    value: '{{repl LdapCopyAuthFrom "SearchUsername"}}'
    required: true
  - name: ldap_search_password
    title: Search password
    type: password
    value: '{{repl LdapCopyAuthFrom "SearchPassword"}}'
    required: true
  - name: ldap_schema
    type: heading
    title: LDAP schema
  - name: ldap_base_dn
    title: Base DN
    type: text
    value: '{{repl LdapCopyAuthFrom "BaseDN"}}'
    required: true
  - name: ldap_usersearch_dn
    title: User search DN
    type: text
    value: '{{repl LdapCopyAuthFrom "UserSearchDN"}}'
    default: ou=users
    required: true
  - name: ldap_restricted_user_group
    title: Restricted User Group
    type: text
    value: '{{repl LdapCopyAuthFrom "RestrictedGroupCNs"}}'
    required: false
  - name: ldap_username_field
    title: Username field
    type: text
    value: '{{repl LdapCopyAuthFrom "FieldUsername"}}'
    default: uid
    required: true
  - name: ldap_test_inputs
    type: heading
    title: Test LDAP Settings
    description: Test the above LDAP settings by entering a username and password and clicking the button below. You will be notified of success or failure.
  - name: ldap_login_username
    title: Test username
    type: text
    default: 'user123'
  - name: ldap_login_password
    title: Test password
    type: password
    default: 'secret'
  test_proc:
    display_name: Test LDAP
    command: ldap_auth
    arg_fields:
      - ldap_type
      - ldap_hostname
      - ldap_port
      - ldap_encryption
      - ldap_search_user
      - ldap_search_password
      - ldap_base_dn
      - ldap_usersearch_dn
      - ldap_restricted_user_group
      - ldap_username_field
      - ldap_login_username
      - ldap_login_password
- name: saml
  when: auth_source=auth_type_saml
  title: SAML SSO Integration
  description: Configure npm Enterprise to work with your SAML SSO provider.
  items:
  - name: saml_entity_id
    title: Entity ID (Unique identifier for the service provider, often the URL of the metadata file)
    default: 'http://{{repl ConfigOption "publicip" }}:8082/auth/saml/metadata.xml'
    type: text
  - name: saml_assert_endpoint
    title: Assert Endpoint (URL of service provider assert endpoint)
    default: 'http://{{repl ConfigOption "publicip" }}:8082/auth/saml/assert'
    type: text
  - name: saml_logout_endpoint
    title: Logout Endpoint (URL of service provider logout endpoint)
    default: 'http://{{repl ConfigOption "publicip" }}:8082/auth/saml/logout'
    type: text
  - name: saml_nameid_format
    title: Format for Name ID
    default: 'urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress'
    type: text
  - name: saml_sso_login_url
    title: Identity Provider SSO Login URL
    default: ''
    type: text
  - name: saml_sso_logout_url
    title: Identity Provider Single Logout URL
    default: ''
    type: text
  - name: saml_certificate
    title: Identity Provider Certificate (Base64 Encode PEM Format)
    default: ''
    type: text
    hidden: true
  - name: saml_certificate_raw
    title: Identity Provider Certificate
    type: textarea
    props:
      rows: 8
- name: oauth2
  when: auth_source=auth_type_oauth2
  title: OAuth2 Integration
  description: Configure npm Enterprise to work with OAuth 2.0 Providers.
  items:
  - name: oauth2_client_id
    title: Client ID
    type: text
    default: ''
  - name: oauth2_client_secret
    default: ''
    title: Client Secret
    type: text
  - name: oauth2_client_site
    default: ''
    title: API Endpoint (e.g., https://github.com/login)
    type: text
  - name: oauth2_token_path
    title: Token Path
    default: '/oauth/access_token'
    type: text
  - name: oauth2_authorization_path
    title: Authorization Path
    default: '/oauth/authorize'
    type: text
  - name: oauth2_redirect_uri
    title: Redirect URI
    default: 'http://{{repl ConfigOption "publicip" }}:8082/auth/oauth2/callback'
    type: text
  - name: oauth2_scope
    title: Scope
    default: 'user'
    type: text
  - name: oauth2_profile_url
    title: Profile URL (protected resource to fetch user profile from, .e.g., https://api.github.com/user)
    default: ''
    type: text
  - name: oauth2_email_key
    title: Email Key (key in profile containing email address, e.g., "email")
    default: 'email'
    type: text
  - name: oauth2_user_key
    title: User Key (key in profile containing username, e.g., "login")
    default: 'login'
    type: text
- name: custom
  when: auth_source=auth_type_custom
  title: Custom Authentication
  description: Configure a custom auth strategy. Install your module on the host machine in the configured "Miscellaneous data files" storage directory from above (default is /usr/local/lib/npme/data). The module will be available at /etc/npme/data inside your container.
  items:
  - name: authorization
    title: Authorization plugin
    type: text
    default: 'github'
  - name: authentication
    title: Authentication plugin
    type: text
    default: 'github'
  - name: session
    title: Session plugin
    type: text
    default: 'github'
